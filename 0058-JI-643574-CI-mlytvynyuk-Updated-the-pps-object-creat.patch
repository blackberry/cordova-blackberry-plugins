From 0a14425f91d3f518cfcf15c2f7e05798e8a986cd Mon Sep 17 00:00:00 2001
From: Nik Schultz <nschultz@qnx.com>
Date: Thu, 10 Jul 2014 12:22:44 -0400
Subject: [PATCH 58/61] JI:643574 CI:mlytvynyuk Updated the pps object
 creation methods in regards to a change in
 webplatform and added the new com.qnx.power plugin

---
 .../src/blackberry10/application.js                |    6 +-
 .../src/blackberry10/application.js                |    2 +-
 .../src/blackberry10/pbap.js                       |    4 +-
 .../src/blackberry10/bluetooth.js                  |    8 +-
 .../src/blackberry10/audiomixer.js                 |    8 +-
 plugin/com.qnx.car.hvac/src/blackberry10/hvac.js   |    4 +-
 .../src/blackberry10/providers-elektrobit.js       |    6 +-
 .../src/blackberry10/profile.js                    |    4 +-
 plugin/com.qnx.car.radio/src/blackberry10/radio.js |   10 +-
 .../src/blackberry10/sensors.js                    |    2 +-
 plugin/com.qnx.car.theme/src/blackberry10/theme.js |    6 +-
 plugin/com.qnx.message/src/blackberry10/message.js |    6 +-
 plugin/com.qnx.phone/src/blackberry10/phone.js     |    4 +-
 plugin/com.qnx.power/plugin.xml                    |   33 ++++++
 plugin/com.qnx.power/src/blackberry10/index.js     |   91 +++++++++++++++++
 plugin/com.qnx.power/src/blackberry10/power.js     |   87 ++++++++++++++++
 plugin/com.qnx.power/www/client.js                 |  106 ++++++++++++++++++++
 .../com.qnx.settings/src/blackberry10/settings.js  |    4 +-
 18 files changed, 354 insertions(+), 37 deletions(-)
 create mode 100644 plugin/com.qnx.power/plugin.xml
 create mode 100644 plugin/com.qnx.power/src/blackberry10/index.js
 create mode 100644 plugin/com.qnx.power/src/blackberry10/power.js
 create mode 100644 plugin/com.qnx.power/www/client.js

diff --git a/plugin/com.qnx.application.event/src/blackberry10/application.js b/plugin/com.qnx.application.event/src/blackberry10/application.js
index 26cd97f..e186977 100755
--- a/plugin/com.qnx.application.event/src/blackberry10/application.js
+++ b/plugin/com.qnx.application.event/src/blackberry10/application.js
@@ -39,7 +39,7 @@ var _pps = qnx.webplatform.pps,
  */
 function init () {
 	try {
-		_windowGroupPPS = _pps.createObject("/pps/system/navigator/windowgroup", _pps.PPSMode.DELTA);
+		_windowGroupPPS = _pps.create("/pps/system/navigator/windowgroup", _pps.PPSMode.DELTA);
 		_windowGroupPPS.open(_pps.FileMode.WRONLY);
 	} catch (ex) {
 		console.error('Error in webworks ext: application.event/application.js:init():', ex);
@@ -122,13 +122,13 @@ module.exports = {
 
 		//listen for app commands
 		if (typeof _commandReaderPPS === "undefined") {
-			_commandReaderPPS = _pps.createObject("/pps/system/navigator/command", _pps.PPSMode.DELTA);
+			_commandReaderPPS = _pps.create("/pps/system/navigator/command", _pps.PPSMode.DELTA);
 			_commandReaderPPS.onNewData = onCommand;
 			_commandReaderPPS.open(_pps.FileMode.RDONLY);
 		}	
 		//listen for startup arguments
 		if (typeof _appdataReaderPPS === "undefined") {
-			_appdataReaderPPS = _pps.createObject("/pps/system/navigator/appdata?f=" + _key, _pps.PPSMode.DELTA);
+			_appdataReaderPPS = _pps.create("/pps/system/navigator/appdata?f=" + _key, _pps.PPSMode.DELTA);
 			_appdataReaderPPS.onFirstReadComplete = onAppDataReady;
 			_appdataReaderPPS.onNewData = onAppData;
 			_appdataReaderPPS.open(_pps.FileMode.RDONLY);
diff --git a/plugin/com.qnx.application/src/blackberry10/application.js b/plugin/com.qnx.application/src/blackberry10/application.js
index 5169bd5..4f14c58 100755
--- a/plugin/com.qnx.application/src/blackberry10/application.js
+++ b/plugin/com.qnx.application/src/blackberry10/application.js
@@ -33,7 +33,7 @@ module.exports = {
 	 */
 		init: function () {
 		//writer
-		_writerPPS = _pps.createObject("/pps/services/app-launcher", _pps.PPSMode.DELTA);
+		_writerPPS = _pps.create("/pps/services/app-launcher", _pps.PPSMode.DELTA);
 		_writerPPS.open(_pps.FileMode.WRONLY);
 	},
 
diff --git a/plugin/com.qnx.bluetooth.pbap/src/blackberry10/pbap.js b/plugin/com.qnx.bluetooth.pbap/src/blackberry10/pbap.js
index 1ed474f..4a6d20e 100755
--- a/plugin/com.qnx.bluetooth.pbap/src/blackberry10/pbap.js
+++ b/plugin/com.qnx.bluetooth.pbap/src/blackberry10/pbap.js
@@ -150,7 +150,7 @@ module.exports = {
 	init: function() {
 		try {
 			//_statusPPS
-			_statusPPS = _pps.createObject("/pps/services/bluetooth/phonebook/status", _pps.PPSMode.DELTA);
+			_statusPPS = _pps.create("/pps/services/bluetooth/phonebook/status", _pps.PPSMode.DELTA);
 			_statusPPS.onNewData = onStatusEvent;
 			_statusPPS.open(_pps.FileMode.RDONLY);
 		} catch(ex) {
@@ -161,7 +161,7 @@ module.exports = {
 		
 		try {
 			//writing pps commands
-			_commandPPS = _pps.createObject("/pps/services/bluetooth/phonebook/control", _pps.PPSMode.DELTA);
+			_commandPPS = _pps.create("/pps/services/bluetooth/phonebook/control", _pps.PPSMode.DELTA);
 			_commandPPS.open(_pps.FileMode.WRONLY);
 		} catch(ex) {
 			var err = 'qnx.phonebook::init [pbap.js] Error opening /pps/services/bluetooth/phonebook/control';
diff --git a/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js b/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
index a6f575a..993a8a5 100755
--- a/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
+++ b/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
@@ -226,7 +226,7 @@ module.exports = {
 	init:function () {
 
 		/* Initialise PPS object which populated when user Paired with device */
-		_pairedDevicesPPS = _pps.createObject("/pps/services/bluetooth/paired_devices/.all", _pps.PPSMode.DELTA);
+		_pairedDevicesPPS = _pps.create("/pps/services/bluetooth/paired_devices/.all", _pps.PPSMode.DELTA);
 
 		/* We have to monitor onFirstReadComplete and onNewData event to capture all devices */
 		_pairedDevicesPPS.onFirstReadComplete = onPairedDevice;
@@ -235,16 +235,16 @@ module.exports = {
 		_pairedDevicesPPS.open(_pps.FileMode.RDONLY);
 
 		/* Initialise PPS object to send commands and data to the PPS-Bluetooth */
-		_controlPPS = _pps.createObject("/pps/services/bluetooth/control", _pps.PPSMode.DELTA);
+		_controlPPS = _pps.create("/pps/services/bluetooth/control", _pps.PPSMode.DELTA);
 		_controlPPS.open(_pps.FileMode.WRONLY);
 
 		/* Initialise PPS object responsible for notifying about BluettothStake state changes */
-		_statusPPS = _pps.createObject("/pps/services/bluetooth/status", _pps.PPSMode.DELTA);
+		_statusPPS = _pps.create("/pps/services/bluetooth/status", _pps.PPSMode.DELTA);
 		_statusPPS.onNewData = onStatusPPSChange;
 		_statusPPS.open(_pps.FileMode.RDONLY);
 
 		/* Initialise PPS object which indicates what services currently connected and what is MAC of devices */
-		_servicesPPS = _pps.createObject("/pps/services/bluetooth/services", _pps.PPSMode.DELTA);
+		_servicesPPS = _pps.create("/pps/services/bluetooth/services", _pps.PPSMode.DELTA);
 		_servicesPPS.onNewData = onServicesPPSChange;
 		_servicesPPS.open(_pps.FileMode.RDONLY);
 
diff --git a/plugin/com.qnx.car.audiomixer/src/blackberry10/audiomixer.js b/plugin/com.qnx.car.audiomixer/src/blackberry10/audiomixer.js
index 7098797..c1fed7d 100755
--- a/plugin/com.qnx.car.audiomixer/src/blackberry10/audiomixer.js
+++ b/plugin/com.qnx.car.audiomixer/src/blackberry10/audiomixer.js
@@ -55,7 +55,7 @@ module.exports = {
 	 */
 	init: function() {
 		//audio mixer reader
-		_mixerReaderPPS = _pps.createObject("/pps/services/audio/mixer", _pps.PPSMode.DELTA);
+		_mixerReaderPPS = _pps.create("/pps/services/audio/mixer", _pps.PPSMode.DELTA);
 		_mixerReaderPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data)  {
 				_triggerUpdate(dataFormat(event.data));
@@ -64,11 +64,11 @@ module.exports = {
 		_mixerReaderPPS.open(_pps.FileMode.RDONLY);
 
 		//audio mixer writer
-		_mixerWriterPPS = _pps.createObject("/pps/services/audio/mixer", _pps.PPSMode.DELTA);
+		_mixerWriterPPS = _pps.create("/pps/services/audio/mixer", _pps.PPSMode.DELTA);
 		_mixerWriterPPS.open(_pps.FileMode.WRONLY);
 
 		//volume reader
-		_volumeReaderPPS = _pps.createObject("/pps/services/audio/status", _pps.PPSMode.DELTA);
+		_volumeReaderPPS = _pps.create("/pps/services/audio/status", _pps.PPSMode.DELTA);
 		_volumeReaderPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data && !isNaN(event.data["output.speaker.volume"])) {
 				_triggerUpdate(dataFormat({ volume: event.data["output.speaker.volume"] }));
@@ -78,7 +78,7 @@ module.exports = {
 		_volumeReaderPPS.open(_pps.FileMode.RDONLY);
 
 		//volume writer
-		_volumeWriterPPS = _pps.createObject("/pps/services/audio/control", _pps.PPSMode.DELTA);
+		_volumeWriterPPS = _pps.create("/pps/services/audio/control", _pps.PPSMode.DELTA);
 		_volumeWriterPPS.open(_pps.FileMode.WRONLY);
 
 	},
diff --git a/plugin/com.qnx.car.hvac/src/blackberry10/hvac.js b/plugin/com.qnx.car.hvac/src/blackberry10/hvac.js
index 3dae49b..0f30379 100755
--- a/plugin/com.qnx.car.hvac/src/blackberry10/hvac.js
+++ b/plugin/com.qnx.car.hvac/src/blackberry10/hvac.js
@@ -55,7 +55,7 @@ module.exports = {
 	 */
 	init: function() {
 		//readerPPS
-		_readerPPS = _pps.createObject("/pps/qnxcar/hvac", _pps.PPSMode.DELTA);
+		_readerPPS = _pps.create("/pps/qnxcar/hvac", _pps.PPSMode.DELTA);
 		_readerPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data) {
 				_triggerUpdate(dataFormat(event.data));
@@ -64,7 +64,7 @@ module.exports = {
 		_readerPPS.open(_pps.FileMode.RDONLY);
 
 		//writerPPS
-		_writerPPS = _pps.createObject("/pps/qnxcar/hvac", _pps.PPSMode.DELTA);
+		_writerPPS = _pps.create("/pps/qnxcar/hvac", _pps.PPSMode.DELTA);
 		_writerPPS.open(_pps.FileMode.WRONLY);
 	},
 	
diff --git a/plugin/com.qnx.car.navigation/src/blackberry10/providers-elektrobit.js b/plugin/com.qnx.car.navigation/src/blackberry10/providers-elektrobit.js
index 2c07064..0e9b9de 100755
--- a/plugin/com.qnx.car.navigation/src/blackberry10/providers-elektrobit.js
+++ b/plugin/com.qnx.car.navigation/src/blackberry10/providers-elektrobit.js
@@ -168,15 +168,15 @@ module.exports = {
 	 * Initializes the extension 
 	 */
 	init: function() {
-		_statusPPS = _pps.createObject("/pps/qnxcar/navigation/status", _pps.PPSMode.DELTA);
+		_statusPPS = _pps.create("/pps/qnxcar/navigation/status", _pps.PPSMode.DELTA);
 		_statusPPS.onNewData = onStatusEvent;
 		_statusPPS.open(_pps.FileMode.RDONLY);
 
-		_controlReaderPPS = _pps.createObject("/pps/qnxcar/navigation/control", _pps.PPSMode.DELTA);
+		_controlReaderPPS = _pps.create("/pps/qnxcar/navigation/control", _pps.PPSMode.DELTA);
 		_controlReaderPPS.onNewData = onControlEvent;
 		_controlReaderPPS.open(_pps.FileMode.RDONLY);
 
-		_controlWriterPPS = _pps.createObject("/pps/qnxcar/navigation/control", _pps.PPSMode.DELTA);
+		_controlWriterPPS = _pps.create("/pps/qnxcar/navigation/control", _pps.PPSMode.DELTA);
 		_controlWriterPPS.open(_pps.FileMode.WRONLY);
 	},
 
diff --git a/plugin/com.qnx.car.profile/src/blackberry10/profile.js b/plugin/com.qnx.car.profile/src/blackberry10/profile.js
index b5a58e6..e882211 100755
--- a/plugin/com.qnx.car.profile/src/blackberry10/profile.js
+++ b/plugin/com.qnx.car.profile/src/blackberry10/profile.js
@@ -56,7 +56,7 @@ module.exports = {
 	 */
 	init: function() {
 		//readerPPS
-		_readerPPS = _pps.createObject("/pps/qnxcar/profile/user", _pps.PPSMode.DELTA);
+		_readerPPS = _pps.create("/pps/qnxcar/profile/user", _pps.PPSMode.DELTA);
 		_readerPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data) {
 				_triggerUpdate(event.data);
@@ -65,7 +65,7 @@ module.exports = {
 		_readerPPS.open(_pps.FileMode.RDONLY);
 
 		//writerPPS
-		_writerPPS = _pps.createObject("/pps/qnxcar/profile/user", _pps.PPSMode.DELTA);
+		_writerPPS = _pps.create("/pps/qnxcar/profile/user", _pps.PPSMode.DELTA);
 		_writerPPS.open(_pps.FileMode.WRONLY);
 
 		_db = _qdb.createObject();
diff --git a/plugin/com.qnx.car.radio/src/blackberry10/radio.js b/plugin/com.qnx.car.radio/src/blackberry10/radio.js
index b85661a..fa94a2e 100755
--- a/plugin/com.qnx.car.radio/src/blackberry10/radio.js
+++ b/plugin/com.qnx.car.radio/src/blackberry10/radio.js
@@ -121,11 +121,11 @@ module.exports = {
 	 */
 	init: function() {
 		//_tunersPPS
-		_tunersPPS = _pps.createObject("/pps/radio/tuners", _pps.PPSMode.DELTA);
+		_tunersPPS = _pps.create("/pps/radio/tuners", _pps.PPSMode.DELTA);
 		_tunersPPS.open(_pps.FileMode.RDONLY);
 		
 		//_statusPPS
-		_statusPPS = _pps.createObject("/pps/radio/status", _pps.PPSMode.DELTA);
+		_statusPPS = _pps.create("/pps/radio/status", _pps.PPSMode.DELTA);
 		_statusPPS.onNewData = function(data) {
 			//status updates
 			if (_triggerUpdate) {
@@ -145,14 +145,14 @@ module.exports = {
 		
 		//writing pps commands
 		if (SIMULATION_MODE) {
-			_commandPPS = _pps.createObject("/pps/radio/status", _pps.PPSMode.DELTA);
+			_commandPPS = _pps.create("/pps/radio/status", _pps.PPSMode.DELTA);
 		} else {
-			_commandPPS = _pps.createObject("/pps/radio/command", _pps.PPSMode.DELTA);
+			_commandPPS = _pps.create("/pps/radio/command", _pps.PPSMode.DELTA);
 		}
 		_commandPPS.open(_pps.FileMode.WRONLY);
 
 		//status writer, used to save presets
-		_statusWriterPPS = _pps.createObject("/pps/radio/status", _pps.PPSMode.DELTA);
+		_statusWriterPPS = _pps.create("/pps/radio/status", _pps.PPSMode.DELTA);
 		_statusWriterPPS.open(_pps.FileMode.WRONLY);
 	},
 		
diff --git a/plugin/com.qnx.car.sensors/src/blackberry10/sensors.js b/plugin/com.qnx.car.sensors/src/blackberry10/sensors.js
index cd995f1..0bccac1 100755
--- a/plugin/com.qnx.car.sensors/src/blackberry10/sensors.js
+++ b/plugin/com.qnx.car.sensors/src/blackberry10/sensors.js
@@ -34,7 +34,7 @@ module.exports = {
 	 * Initializes the extension 
 	 */
 	init: function() {
-		_readerPPS = _pps.createObject("/pps/qnxcar/sensors", _pps.PPSMode.DELTA);
+		_readerPPS = _pps.create("/pps/qnxcar/sensors", _pps.PPSMode.DELTA);
 		_readerPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data) {
 				_triggerUpdate(event.data);
diff --git a/plugin/com.qnx.car.theme/src/blackberry10/theme.js b/plugin/com.qnx.car.theme/src/blackberry10/theme.js
index ea2aea7..25fe2fc 100755
--- a/plugin/com.qnx.car.theme/src/blackberry10/theme.js
+++ b/plugin/com.qnx.car.theme/src/blackberry10/theme.js
@@ -35,10 +35,10 @@ module.exports = {
 	 * Initializes the extension 
 	 */
 	init: function() {
-		_themesReaderPPS = _pps.createObject("/pps/qnxcar/themes", _pps.PPSMode.DELTA);
+		_themesReaderPPS = _pps.create("/pps/qnxcar/themes", _pps.PPSMode.DELTA);
 		_themesReaderPPS.open(_pps.FileMode.RDONLY);
 
-		_profileThemeReaderPPS = _pps.createObject("/pps/qnxcar/profile/theme", _pps.PPSMode.DELTA);
+		_profileThemeReaderPPS = _pps.create("/pps/qnxcar/profile/theme", _pps.PPSMode.DELTA);
 		_profileThemeReaderPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data) {
 				_triggerUpdate(this.getActive());
@@ -46,7 +46,7 @@ module.exports = {
 		}.bind(this);
 		_profileThemeReaderPPS.open(_pps.FileMode.RDONLY);
 
-		_profileThemeWriterPPS = _pps.createObject("/pps/qnxcar/profile/theme", _pps.PPSMode.DELTA);
+		_profileThemeWriterPPS = _pps.create("/pps/qnxcar/profile/theme", _pps.PPSMode.DELTA);
 		_profileThemeWriterPPS.open(_pps.FileMode.WRONLY);
 	},
 
diff --git a/plugin/com.qnx.message/src/blackberry10/message.js b/plugin/com.qnx.message/src/blackberry10/message.js
index a5197c0..7167384 100755
--- a/plugin/com.qnx.message/src/blackberry10/message.js
+++ b/plugin/com.qnx.message/src/blackberry10/message.js
@@ -378,7 +378,7 @@ module.exports = {
 	init:function () {
 		try {
 			//_statusPPS
-			_statusPPS = _pps.createObject("/pps/services/bluetooth/messages/status", _pps.PPSMode.DELTA);
+			_statusPPS = _pps.create("/pps/services/bluetooth/messages/status", _pps.PPSMode.DELTA);
 			_statusPPS.onNewData = onStatusEvent;
 			_statusPPS.open(_pps.FileMode.RDONLY);
 		} catch (ex) {
@@ -389,7 +389,7 @@ module.exports = {
 
 		try {
 			//writing pps commands
-			_controlPPS = _pps.createObject("/pps/services/bluetooth/messages/control", _pps.PPSMode.DELTA);
+			_controlPPS = _pps.create("/pps/services/bluetooth/messages/control", _pps.PPSMode.DELTA);
 			_controlPPS.open(_pps.FileMode.WRONLY);
 		} catch (ex) {
 			var err = 'qnx.message::init [message.js] Error opening /pps/services/bluetooth/messages/control';
@@ -399,7 +399,7 @@ module.exports = {
 
 		try {
 			//receiving notifications
-			_notificationPPS = _pps.createObject("/pps/services/bluetooth/messages/notification", _pps.PPSMode.DELTA);
+			_notificationPPS = _pps.create("/pps/services/bluetooth/messages/notification", _pps.PPSMode.DELTA);
 			_notificationPPS.onNewData = onNotificationEvent;
 			_notificationPPS.open(_pps.FileMode.RDONLY);
 		} catch (ex) {
diff --git a/plugin/com.qnx.phone/src/blackberry10/phone.js b/plugin/com.qnx.phone/src/blackberry10/phone.js
index be131b3..088f5c3 100755
--- a/plugin/com.qnx.phone/src/blackberry10/phone.js
+++ b/plugin/com.qnx.phone/src/blackberry10/phone.js
@@ -67,7 +67,7 @@ module.exports = {
 	 */
 	init:function () {
 		//readerPPS
-		_hfpControlPPS = _pps.createObject("/pps/services/handsfree/control", _pps.PPSMode.DELTA);
+		_hfpControlPPS = _pps.create("/pps/services/handsfree/control", _pps.PPSMode.DELTA);
 
 		try{
 			_hfpControlPPS.open(_pps.FileMode.WRONLY);
@@ -75,7 +75,7 @@ module.exports = {
 			throw new Error("qnx.phone::init [phone.js] PPS object /pps/services/handsfree/status cannot be opened")
 		}
 
-		_hfpStatusPPS = _pps.createObject("/pps/services/handsfree/status", _pps.PPSMode.DELTA);
+		_hfpStatusPPS = _pps.create("/pps/services/handsfree/status", _pps.PPSMode.DELTA);
 		_hfpStatusPPS.onNewData = function (event) {
 			if (event && event.data && event.data.cmd_status) {
 				var cmd_status = event.data.cmd_status;
diff --git a/plugin/com.qnx.power/plugin.xml b/plugin/com.qnx.power/plugin.xml
new file mode 100644
index 0000000..de99071
--- /dev/null
+++ b/plugin/com.qnx.power/plugin.xml
@@ -0,0 +1,33 @@
+<!--
+Copyright 2013  QNX Software Systems Limited
+
+Licensed under the Apache License, Version 2.0 (the "License"). You
+may not reproduce, modify or distribute this software except in
+compliance with the License. You may obtain a copy of the License
+at: http://www.apache.org/licenses/LICENSE-2.0.
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" basis,
+WITHOUT WARRANTIES OF ANY KIND, either express or implied.
+This file may contain contributions from others, either as
+contributors under the License or as licensors under other terms.
+Please review this entire file for other proprietary rights or license
+notices, as well as the applicable QNX License Guide at
+http://www.qnx.com/legal/licensing/document_archive/current_matrix.pdf
+for other information.
+-->
+<plugin xmlns="http://www.phonegap.com/ns/plugins/1.0"
+	id="com.qnx.power"
+	version="1.0.0">
+	<js-module src="www/client.js">
+		<clobbers target="qnx.power" />
+	</js-module>
+
+	<platform name="blackberry10">
+		<source-file src="src/blackberry10/index.js" />
+		<source-file src="src/blackberry10/power.js" />
+		<config-file target="www/config.xml" parent="/widget">
+			<feature name="com.qnx.power" value="com.qnx.power" />
+		</config-file>
+	</platform>
+</plugin>
diff --git a/plugin/com.qnx.power/src/blackberry10/index.js b/plugin/com.qnx.power/src/blackberry10/index.js
new file mode 100644
index 0000000..6c65293
--- /dev/null
+++ b/plugin/com.qnx.power/src/blackberry10/index.js
@@ -0,0 +1,91 @@
+/*
+ * Copyright 2014  QNX Software Systems Limited
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"). You
+ * may not reproduce, modify or distribute this software except in
+ * compliance with the License. You may obtain a copy of the License
+ * at: http://www.apache.org/licenses/LICENSE-2.0.
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.
+ * This file may contain contributions from others, either as
+ * contributors under the License or as licensors under other terms.
+ * Please review this entire file for other proprietary rights or license
+ * notices, as well as the applicable QNX License Guide at
+ * http://www.qnx.com/legal/licensing/document_archive/current_matrix.pdf
+ * for other information.
+ */
+
+ /**
+  * Allows control of shutdown and reboot for the target
+  */
+
+var _power = require('./power'),
+	_wwfix = require("../../lib/wwfix");
+
+/**
+ * Initializes the extension 
+ */
+function init() {
+	try {
+		_power.init();
+	} catch (ex) {
+		console.error('Error in cordova plugin: power/index.js:init():', ex);
+	}
+}
+init();
+
+
+/*
+ * Exports are the publicly accessible functions
+ */
+module.exports = {
+
+	 /**
+	 * shutdowns the system
+	 * @param success {Function} Function to call if the operation is a success
+	 * @param fail {Function} Function to call if the operation fails
+	 * @param args {Object} The arguments supplied. Available arguments for this call are:
+	 * {
+	 *	 reason:"user requested",
+	 *	 fast:1
+	 * }
+	 * @param env {Object} Environment variables
+	 */
+	shutdown: function (success, fail, args, env) {
+		var result = new PluginResult(args, env),
+			data;
+		try {
+			args = _wwfix.parseArgs(args);
+			data = _power.shutdown(args.reason, args.fast);
+			result.ok(data, false);
+		} catch (e) {
+			result.error(JSON.stringify(e), false);
+		}
+	},
+	
+	/**
+	 * reboots the system
+	 * @param success {Function} Function to call if the operation is a success
+	 * @param fail {Function} Function to call if the operation fails
+	 * @param args {Object} The arguments supplied. Available arguments for this call are:
+	 * {
+	 *	 reason:"user requested",
+	 *	 fast:1
+	 * }
+	 * @param env {Object} Environment variables
+	 */
+	reboot: function (success, fail, args, env) {
+		var result = new PluginResult(args, env),
+			data;
+		try {
+			args = _wwfix.parseArgs(args);
+			data = _power.reboot(args.reason, args.fast);
+			result.ok(data, false);
+		} catch (e) {
+			result.error(JSON.stringify(e), false);
+		}
+	}
+};
+
diff --git a/plugin/com.qnx.power/src/blackberry10/power.js b/plugin/com.qnx.power/src/blackberry10/power.js
new file mode 100644
index 0000000..c89f2c1
--- /dev/null
+++ b/plugin/com.qnx.power/src/blackberry10/power.js
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2014  QNX Software Systems Limited
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"). You
+ * may not reproduce, modify or distribute this software except in
+ * compliance with the License. You may obtain a copy of the License
+ * at: http://www.apache.org/licenses/LICENSE-2.0.
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.
+ * This file may contain contributions from others, either as
+ * contributors under the License or as licensors under other terms.
+ * Please review this entire file for other proprietary rights or license
+ * notices, as well as the applicable QNX License Guide at
+ * http://www.qnx.com/legal/licensing/document_archive/current_matrix.pdf
+ * for other information.
+ */
+
+/**
+ * The abstraction layer for shutdown functionality
+ */
+
+var	_pps = qnx.webplatform.pps,
+	_shutdownWriterPPS,
+	SHUTDOWN = "shutdown";
+
+/**
+ * Exports are the publicly accessible functions
+ */
+module.exports = {
+	/**
+	 * Initializes the extension 
+	 */
+	init: function () {
+
+		_shutdownWriterPPS = _pps.create("/pps/services/power/shutdown/control", _pps.PPSMode.DELTA);
+		_shutdownWriterPPS.open(_pps.FileMode.WRONLY);
+	},
+	
+	/**
+	 * Sends the reboot command to the PPS
+	 * @param reason {String} - shutdown reason
+	 * @param fast {String} 1 - fast reboot without logging, 0 - slow with logging
+	 * */
+	reboot: function (reason, fast) {
+		var payload,
+			err;
+		if (typeof reason === 'string' &&
+			typeof fast === 'string') {
+
+			payload = {
+				msg: SHUTDOWN,
+				id: "1",
+				dat: {"shutdownType": "0", "reason": reason, "fast": fast}
+			};
+			_shutdownWriterPPS.write(payload);
+		} else {
+			err = 'qnx.power::reboot [power.js] Required parameters are invalid';
+			console.error(err);
+			throw new Error(err);
+		}
+	},	
+	/**
+	 * Sends the shutdown command to the PPS
+	 * @param reason {String} - shutdown reason
+	 * @param fast {String} 1 - fast reboot without logging, 0 - slow with logging
+	 * */
+	shutdown: function (reason, fast) {
+		var payload,
+			err;
+		if (typeof reason === 'string' &&
+			typeof fast === 'string') {
+
+			payload = {
+				msg: SHUTDOWN,
+				id: "1",
+				dat: {"shutdownType": "0", "reason": reason, "fast": fast}
+			};
+			_shutdownWriterPPS.write(payload);
+		} else {
+			err = 'qnx.power::shutdown [power.js] Required parameters are invalid';
+			console.error(err);
+			throw new Error(err);
+		}
+	}
+};
diff --git a/plugin/com.qnx.power/www/client.js b/plugin/com.qnx.power/www/client.js
new file mode 100644
index 0000000..80c96d5
--- /dev/null
+++ b/plugin/com.qnx.power/www/client.js
@@ -0,0 +1,106 @@
+/*
+ * Copyright 2014  QNX Software Systems Limited
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"). You
+ * may not reproduce, modify or distribute this software except in
+ * compliance with the License. You may obtain a copy of the License
+ * at: http://www.apache.org/licenses/LICENSE-2.0.
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.
+ * This file may contain contributions from others, either as
+ * contributors under the License or as licensors under other terms.
+ * Please review this entire file for other proprietary rights or license
+ * notices, as well as the applicable QNX License Guide at
+ * http://www.qnx.com/legal/licensing/document_archive/current_matrix.pdf
+ * for other information.
+ */
+ 
+/**
+ * @name qnx.power
+ * @static
+ *
+ * Controls shutdown and reboot for the target 
+ */
+
+var _self = {},
+	_ID = 'com.qnx.power',
+	_utils = cordova.require('cordova/utils');
+
+
+/**
+ * @desc Initiate a shutdown request
+ * @param {Function} successCallback The function to call when successful.
+ * @param {Function} [errorCallback] The function to call if there is an error.
+ * @param {String} [reason] The zone to filter the results by.
+ * @param {String} fast 1- fast shutdown without logging 0- slow with logging
+ * @memberOf module:car.power
+ * @method shutdown
+ * @example 
+ *
+ * //define your callback function(s)
+ * function successCallback(audioMixerItems) {
+ * 		console.log("Shutdown Initiated")			
+ * }
+ *
+ * function errorCallback(error) {
+ *		console.log(error.code, error.msg);
+ * }
+ *
+ *
+ * //call the method
+ * car.power.shutdown(successCallback, errorCallback, "userRequest","1");
+ *
+ *
+ */
+_self.shutdown = function (successCallback, errorCallback, reason, fast) {
+	var args = {};
+	if (reason !== null && fast !== null) {
+		args.reason = reason;
+		args.fast = fast;
+		window.cordova.exec(successCallback, errorCallback, _ID, 'shutdown', args, false);
+	} else {
+		console.error("qnx.power.shutdown requires valid 'reason' and 'fast' parameters.");
+	}
+};
+
+
+/**
+ * @desc Initiate a reboot request
+ * @param {Function} successCallback The function to call when successful.
+ * @param {Function} [errorCallback] The function to call if there is an error.
+ * @param {String} [reason] The zone to filter the results by.
+ * @param {String} fast 1- fast reboot without logging 0- slow with logging
+ * @memberOf module:car.power
+ * @method reboot
+ * @example 
+ *
+ * //define your callback function(s)
+ * function successCallback(audioMixerItems) {
+ * 		console.log("Shutdown Initiated")			
+ * }
+ *
+ * function errorCallback(error) {
+ *		console.log(error.code, error.msg);
+ * }
+ *
+ *
+ * //call the method
+ * car.power.reboot(successCallback, errorCallback, "userRequest","1");
+ *
+ *
+ */
+_self.reboot = function (successCallback, errorCallback, reason, fast) {
+	var args = {};
+	if (reason !== null && fast !== null) {
+		args.reason = reason;
+		args.fast = fast;
+		window.cordova.exec(successCallback, errorCallback, _ID, 'reboot', args, false);
+	} else {
+		console.error("qnx.power.reboot requires valid 'reason' and 'fast' parameters.");
+	}
+};
+
+//Export
+module.exports = _self;
\ No newline at end of file
diff --git a/plugin/com.qnx.settings/src/blackberry10/settings.js b/plugin/com.qnx.settings/src/blackberry10/settings.js
index 969bae5..c07de5f 100755
--- a/plugin/com.qnx.settings/src/blackberry10/settings.js
+++ b/plugin/com.qnx.settings/src/blackberry10/settings.js
@@ -32,7 +32,7 @@ var	_pps = qnx.webplatform.pps,
 function init() {
 	try {
 		// readerPPS
-		_readerPPS = _pps.createObject("/pps/qnxcar/system/settings", _pps.PPSMode.DELTA);
+		_readerPPS = _pps.create("/pps/qnxcar/system/settings", _pps.PPSMode.DELTA);
 		_readerPPS.onNewData = function(event) {
 			if (_triggerUpdate && event && event.data) {
 				_triggerUpdate(event.data);
@@ -40,7 +40,7 @@ function init() {
 		};
 
 		// writerPPS
-		_writerPPS = _pps.createObject("/pps/qnxcar/system/settings", _pps.PPSMode.DELTA);
+		_writerPPS = _pps.create("/pps/qnxcar/system/settings", _pps.PPSMode.DELTA);
 		
 		// Open the PPS objects
 		if(!_readerPPS.open(_pps.FileMode.RDONLY) || !_writerPPS.open(_pps.FileMode.WRONLY)) {
-- 
1.7.10.msysgit.1

