From 5169cd71848776c82ce5f03ae40035a5d4b40de2 Mon Sep 17 00:00:00 2001
From: Nik Schultz <nschultz@qnx.com>
Date: Thu, 31 Jul 2014 12:15:23 -0400
Subject: [PATCH 61/61] JI:741072 CI:giyu@qnx.com Removed unused api methods
 in the cordova plugins

---
 plugin/com.qnx.message/src/blackberry10/index.js |   11 -------
 plugin/com.qnx.message/www/client.js             |    9 ------
 plugin/com.qnx.phone/www/client.js               |   34 ----------------------
 3 files changed, 54 deletions(-)

diff --git a/plugin/com.qnx.message/src/blackberry10/index.js b/plugin/com.qnx.message/src/blackberry10/index.js
index 3c5d2e5..a98e2ce 100755
--- a/plugin/com.qnx.message/src/blackberry10/index.js
+++ b/plugin/com.qnx.message/src/blackberry10/index.js
@@ -222,17 +222,6 @@ module.exports = {
 			result.error(JSON.stringify(e), false);
 		}
 	},
-
-	/**
-	 * Gets a list of folders for the specified account.
-	 * @param success {Function} Function to call if the operation is a success
-	 * @param fail {Function} Function to call if the operation fails
-	 * @param args {Object} The arguments supplied. Available arguments for this call are: N/A
-	 * @param env {Object} Environment variables
-	 */
-	getFolders: function(success, fail, args, env) {
-		// TODO Implement
-	},
 	
 	/**
 	 * Method retrieves message from the database, check first if message exist in database and return is, if not initiated
diff --git a/plugin/com.qnx.message/www/client.js b/plugin/com.qnx.message/www/client.js
index 70c3d55..9335976 100755
--- a/plugin/com.qnx.message/www/client.js
+++ b/plugin/com.qnx.message/www/client.js
@@ -411,15 +411,6 @@ module.exports = {
 	},
 
 	/**
-	 * @description Get a list of folders by type.
-	 * @param {Number} accountId The message account ID.
-	 * @param {Number} [parentFolderId] The parent folder ID. If not specified, the entire folder tree is returned.
-	 */
-	getFolders:function (accountId, parentFolderId) {
-		// TODO Implement
-	},
-
-	/**
 	 * @description Retrieve message from the database.
 	 *              <p> First, determine if the message exists in database and then return it. If the message
 	 *              doesn't exist, initiate a PPS request to fetch the message using the provided message handle.
diff --git a/plugin/com.qnx.phone/www/client.js b/plugin/com.qnx.phone/www/client.js
index 6f292c7..51b0421 100755
--- a/plugin/com.qnx.phone/www/client.js
+++ b/plugin/com.qnx.phone/www/client.js
@@ -142,30 +142,6 @@ module.exports = {
 	    window.cordova.exec(null, null, _ID, 'redial');
 	},
 	/**
-	 * @description Put a call on hold or release a call from hold.
-	 * <p><b>Note</b>: The <code>callId</code> and <code>service</code> parameters are reserved for future use. </p>
-	 * @param {String} callId Reserved for future use. <p>ID to identify a call.
-	 *        With the existing implementation of the Hands-free service, there's only one active call. </p>
-	 * @param {Boolean} value <code>true</code> to put current call on hold, <code>false</code> to release current call from hold.
-	 * @param {String} [service] Reserved for future use. Identifier of the phone service. 
-	 *        When no parameter specified, function call is routed to the default service (currently the Hands-free service).
-	 */
-	hold: function (callId, value, service) {
-		//TODO Implement this function and add appropriate events
-	},
-	/**
-	 * @description Mute audio input for the incoming phone call (mute microphone).
-	 * <p><b>Note</b>: The <code>callId</code> and <code>service</code> parameters are reserved for future use. </p>
-	 * @param {String} callId Reserved for future use. <p> ID to identify a call.
-	 *        With the existing implementation of the Hands-free service, there's only one active call. </p>
-	 * @param {Boolean} value A value of <code>true</code> to mute, <code>false</code> to unmute.
-	 * @param {String} [service] Reserved for future use. Identifier of the Phone service.
-	 *        When no parameter specified, function call is routed to the default service (currently the Hands-free service).
-	 * */
-	mute: function (callId, value, service) {
-		//TODO Implement this function and add appropriate events
-	},
-	/**
 	 * @description Return the current state of the phone.
 	 * <p><b>Note</b>: The <code>service</code> parameter isn't available for use.
 	 * @param {String} [service] Reserved for future use. <p> Identifier of the phone service.
@@ -187,15 +163,5 @@ module.exports = {
 			console.error(e);
 		}
 		return value;
-	},
-	/**
-	 * @description Call this method to return the list of active calls.</p>
-	 * <p><b>Note</b>: The <code>service</code> parameter isn't available for use.
-	 * @param {String} [service] Reserved for future use. <p>Identifier of the phone service. 
-	 *        When no parameter is specified, the function call is routed to the default service (currently the Hands-free service).</p>
-	 * @return {Object} List of active calls.
-	 * */
-	getActiveCalls: function (service) {
-		//TODO Implement this function
 	}
 };
\ No newline at end of file
-- 
1.7.10.msysgit.1

