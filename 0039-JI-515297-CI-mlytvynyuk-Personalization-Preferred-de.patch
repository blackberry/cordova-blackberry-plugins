From ffd06fd180702d974d1aa3a1bae5e22c1b02556c Mon Sep 17 00:00:00 2001
From: Marc Lapierre <marc@eternallabs.com>
Date: Thu, 17 Oct 2013 13:26:57 -0400
Subject: [PATCH 39/61] JI:515297 CI:mlytvynyuk Personalization: Preferred
 devices list is empty if BT phone connected or paired

---
 .../src/blackberry10/bluetooth.js                  |   44 +++++++++++++++++++-
 .../com.qnx.bluetooth/src/blackberry10/context.js  |   18 ++++++++
 plugin/com.qnx.bluetooth/src/blackberry10/index.js |   38 ++++++++++++++++-
 plugin/com.qnx.bluetooth/www/client.js             |    2 +-
 4 files changed, 98 insertions(+), 4 deletions(-)

diff --git a/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js b/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
index 6f46f99..a6f575a 100755
--- a/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
+++ b/plugin/com.qnx.bluetooth/src/blackberry10/bluetooth.js
@@ -30,7 +30,10 @@ var _pps = qnx.webplatform.pps,
 	_pairedDevices = {},
 
 	_serviceConnectedTrigger,
-	_serviceDisconnectedTrigger;
+	_serviceDisconnectedTrigger,
+	_newPairedDeviceTrigger,
+	_pairingCompleteTrigger,
+	_deviceDeletedTrigger;
 
 /* TODO Please make sure that constants below are identical to ones in client.js*/
 /* TODO Please make sure that constants below are identical to ones in client.js*/
@@ -91,6 +94,10 @@ function onPairedDevice(event) {
 
 		// saving paired device in the list to maintain local copy
 		_pairedDevices[device.mac] = device;
+
+		if (_newPairedDeviceTrigger) {
+			_newPairedDeviceTrigger(device);
+		}
 	}
 }
 
@@ -108,6 +115,9 @@ function onStatusPPSChange(event) {
 			case "BTMGR_EVENT_DEVICE_DELETED":
 				// deleting device from local list of devices when it was deleted by pps-bluetooth from the list of paired devices
 				delete _pairedDevices[mac];
+				if (_deviceDeletedTrigger) {
+					_deviceDeletedTrigger(mac);
+				}
 				break;
 			/* Event indicated that one of the services is connected */
 			case "BTMGR_EVENT_SERVICE_CONNECTED":
@@ -137,6 +147,12 @@ function onStatusPPSChange(event) {
 					_serviceDisconnectedTrigger(triggerEvent);
 				}
 				break;
+			/* Indicates that Pairing completed successfully, also contains MAC of the paired device */
+			case "BTMGR_EVENT_PAIRING_COMPLETE":
+				if (_pairingCompleteTrigger) {
+					_pairingCompleteTrigger(mac);
+				}
+				break;
 		}
 	}
 }
@@ -156,7 +172,7 @@ function onServicesPPSChange() {
 		devices[SERVICE_PAN] = _servicesPPS.ppsObj['pan'];
 		devices[SERVICE_AVRCP] = _servicesPPS.ppsObj['avrcp'];
 	}
-	_serviceStateChanged(devices);
+	//_serviceStateChanged(devices);
 }
 
 /**
@@ -180,6 +196,30 @@ module.exports = {
 	},
 
 	/**
+	 * Sets the trigger function to call when a Bluetooth new paired device event is fired
+	 * @param trigger {Function} The trigger function to call when the event is fired
+	 */
+	setNewPairedDeviceTrigger:function (trigger) {
+		_newPairedDeviceTrigger = trigger;
+	},
+
+	/**
+	 * Sets the trigger function to call when paired device deleted event fired
+	 * @param trigger {Function} The trigger function to call when the event is fired
+	 */
+	setDeviceDeletedTrigger:function (trigger) {
+		_deviceDeletedTrigger = trigger;
+	},
+
+	/**
+	 * Sets the trigger function to call when a Bluetooth pairing complete event is fired
+	 * @param trigger {Function} The trigger function to call when the event is fired
+	 */
+	setPairingCompleteTrigger:function (trigger) {
+		_pairingCompleteTrigger = trigger;
+	},
+
+	/**
 	 * Initializes the extension,
 	 * open and initialise required PPS object and event handlers
 	 */
diff --git a/plugin/com.qnx.bluetooth/src/blackberry10/context.js b/plugin/com.qnx.bluetooth/src/blackberry10/context.js
index 542cf6f..abfaf32 100755
--- a/plugin/com.qnx.bluetooth/src/blackberry10/context.js
+++ b/plugin/com.qnx.bluetooth/src/blackberry10/context.js
@@ -41,6 +41,15 @@ module.exports = {
 				case "bluetoothservicedisconnected":
 					_bluetooth.setServiceDisconnectedTrigger(trigger);
 					break;
+				case "bluetoothnewpaireddevice":
+					_bluetooth.setNewPairedDeviceTrigger(trigger);
+					break;
+				case "bluetoothpairingcomplete":
+					_bluetooth.setPairingCompleteTrigger(trigger);
+					break;
+				case "bluetoothpaireddevicedeleted":
+					_bluetooth.setDeviceDeletedTrigger(trigger);
+					break;
 			}
 		}
 	},
@@ -58,6 +67,15 @@ module.exports = {
 				case "bluetoothservicedisconnected":
 					_bluetooth.setServiceDisconnectedTrigger(null);
 					break;
+				case "bluetoothnewpaireddevice":
+					_bluetooth.setNewPairedDeviceTrigger(null);
+					break;
+				case "bluetoothpairingcomplete":
+					_bluetooth.setPairingCompleteTrigger(null);
+					break;
+				case "bluetoothpaireddevicedeleted":
+					_bluetooth.setDeviceDeletedTrigger(null);
+					break;
 			}
 		}
 	}
diff --git a/plugin/com.qnx.bluetooth/src/blackberry10/index.js b/plugin/com.qnx.bluetooth/src/blackberry10/index.js
index 098a587..dacc6df 100755
--- a/plugin/com.qnx.bluetooth/src/blackberry10/index.js
+++ b/plugin/com.qnx.bluetooth/src/blackberry10/index.js
@@ -47,7 +47,43 @@ var _wwfix = require("../../lib/wwfix"),
 			trigger: function (pluginResult, data) {
 				pluginResult.callbackOk(data, true);
 			} 
-		}
+		},
+		/**
+		 * @event
+		 * Triggered when one new paired device created
+		 */
+		bluetoothnewpaireddevice:{
+			context: require("./context"),
+			event: "bluetoothnewpaireddevice",
+			triggerEvent: "bluetoothnewpaireddevice",
+			trigger: function (pluginResult, data) {
+				pluginResult.callbackOk(data, true);
+			}
+		},
+		/**
+		 * @event
+		 * Triggered when one pairing is complete
+		 */
+		bluetoothpairingcomplete:{
+			context: require("./context"),
+			event: "bluetoothpairingcomplete",
+			triggerEvent: "bluetoothpairingcomplete",
+			trigger: function (pluginResult, data) {
+				pluginResult.callbackOk(data, true);
+			}
+		},
+		/**
+		 * @event
+		 * Triggered when paired device deleted successfully
+		 */
+		bluetoothpaireddevicedeleted:{
+			context: require("./context"),
+			event: "bluetoothpaireddevicedeleted",
+			triggerEvent: "bluetoothpaireddevicedeleted",
+			trigger: function (pluginResult, data) {
+				pluginResult.callbackOk(data, true);
+			}
+		},
 	},
 	_listeners = {};
 
diff --git a/plugin/com.qnx.bluetooth/www/client.js b/plugin/com.qnx.bluetooth/www/client.js
index f9e8534..edcbefc 100755
--- a/plugin/com.qnx.bluetooth/www/client.js
+++ b/plugin/com.qnx.bluetooth/www/client.js
@@ -26,7 +26,7 @@
 
 
 var _ID = "com.qnx.bluetooth",
-	_events = ["bluetoothserviceconnected", "bluetoothservicedisconnected"];
+	_events = ["bluetoothserviceconnected", "bluetoothservicedisconnected", "bluetoothnewpaireddevice", "bluetoothpairingcomplete", "bluetoothpaireddevicedeleted"];
 
 
 _events.map(function (eventName) {
-- 
1.7.10.msysgit.1

